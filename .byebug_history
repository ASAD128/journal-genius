c
result
c
result['status']
result
c
result
c
result
c
rspec spec/api/v1/accounts_controller_spec.rb
result['transactions'].present?
result['transactions].present?
result['account_balance'].present?
result
result['status']
result.status
result = JSON.parse(response.body)
JSON.parse(response.body)[:status]
JSON.parse(response.body)
c
@account.present?
c
@account
c
response.body[:status]
response.body.status
Account.first.id
account_1.id
response.body
c
Account.count
c
response.data
response.result
response
c
@source_account.id.present?
@source_account
c
@destination_account
@source_account
c
Account.where(id: params[:id].to_i).last
Account.find_by(id: params[:id].to)
params[:id]
c
v
c
params[:amount_cents].to_i
arams[:amount_cents].to_i
c
result[:success]
result
c
Account.first
Account.count
Account.find_by(id: source_account.to_i)
source_account.to_i
c
params[:destination_account]
params[:source_account]
c
result[:success]
c
result[:message] = "Seed data not found"
result[:message]
result = {}
var result = {}
var result 
result['message'] = {"Please seed Data"}
result.message
result[:message]
result[:message]]
result
c
destination_account.to_i
source_account.to_i
c
Account.where(name: 'CashBook').last
Account.find_by(name: 'CashBook')
Account.find_by(name: 'CashBook'
destination_account.to_i
source_account.to_i
c
destination_account
source_account
c
destination_account
source_account
c
account_param[:account]
account_param.account
account_params
c
account_params.parameters
account_params.params
account_params.account_number
create_account_number
params[:account_number]
account_params[:account_number]
account_params['account_number']
account_params
c
Transaction.where("destination_account_id = ? OR source_account_id = ?", @account.id, @account.id).last(10)
Transaction.where("destination_account_id = ? OR source_account_id = ?", @account.id, @account.id).count
Transaction.where("destination_account_id = ? OR source_account_id = ?", @account.id, @account.id)
Transaction.where("desitnation_account_id = ? OR source_account_id = ?", @account.id, @account.id).count
Transaction.where("desitnation_account_id = ? OR source_account_id = ?", @account.id, @account.id)
Transaction.where(desitnation_account_id: @account.id).or(Transaction.where(source_account_id: @account.id)).count
Transaction.where(desitnation_account_id: @account.id).or(Transaction.where(source_account_id: @account.id))
Transaction.where(desitnation_account_id: @account.id).or(Transaction.where(source_account_id: @account.id)
Transaction.where(desitnation_account_id: @account.id).or(source_account_id: @account.id)
@account.id
@account
c
amount_cents
c
